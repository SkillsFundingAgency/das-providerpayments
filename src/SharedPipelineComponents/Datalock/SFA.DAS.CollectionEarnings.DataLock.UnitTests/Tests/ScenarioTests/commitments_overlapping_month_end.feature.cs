// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SFA.DAS.CollectionEarnings.DataLock.UnitTests.Tests.ScenarioTests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("commitments_overlapping_month_end")]
    public partial class Commitments_Overlapping_Month_EndFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "commitments_overlapping_month_end.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "commitments_overlapping_month_end", "\tTest what happens when a learner withdrawns from one course in the middle of the" +
                    " month and then starts a new course at the start of the same month.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Learner Completes and progresses - commitment is stopped - no datalocks")]
        public virtual void LearnerCompletesAndProgresses_CommitmentIsStopped_NoDatalocks()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Learner Completes and progresses - commitment is stopped - no datalocks", ((string[])(null)));
#line 5
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "PriceEpisodeIdentifier",
                        "EpisodeStartDate",
                        "TNPStartDate",
                        "AgreedPrice",
                        "Period",
                        "Prog",
                        "Pathway",
                        "Standard",
                        "Framework",
                        "TT01",
                        "TT02",
                        "TT03",
                        "TT04",
                        "TT05",
                        "TT06",
                        "TT07",
                        "TT08",
                        "TT09",
                        "TT10",
                        "TT11",
                        "TT12",
                        "TT15",
                        "End Date",
                        "2nd Incentive Date"});
            table1.AddRow(new string[] {
                        "3-490-1-01/08/2017",
                        "2017-08-01",
                        "2017-06-13",
                        "1950.00",
                        "11",
                        "3",
                        "1",
                        "0",
                        "490",
                        "0",
                        "390",
                        "222.85",
                        "0",
                        "0",
                        "500",
                        "500",
                        "0",
                        "10",
                        "20",
                        "0",
                        "0",
                        "0",
                        "06/06/2018",
                        "03/06/2018"});
            table1.AddRow(new string[] {
                        "2-490-1-18/06/2018",
                        "2018-06-18",
                        "2018-06-18",
                        "2450.00",
                        "11",
                        "2",
                        "1",
                        "0",
                        "490",
                        "115.29",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "23.52",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "",
                        ""});
#line 6
 testRunner.Given("I have the following on programme earnings", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "CommitmentId",
                        "VersionId",
                        "AccountId",
                        "StartDate",
                        "EndDate",
                        "AgreedCost",
                        "Standard",
                        "Prog",
                        "Framework",
                        "Pathway",
                        "PaymentStatus",
                        "PaymentStatusDescription",
                        "EffectiveFromDate",
                        "EffectiveToDate",
                        "WithdrawnOnDate"});
            table2.AddRow(new string[] {
                        "12526",
                        "2957434-001",
                        "13577",
                        "2017-06-01",
                        "2018-07-01",
                        "1950.00",
                        "0",
                        "3",
                        "490",
                        "1",
                        "3",
                        "Withdrawn",
                        "2017-06-01",
                        "NULL",
                        "2018-06-18"});
            table2.AddRow(new string[] {
                        "277697",
                        "2600007-001",
                        "13577",
                        "2018-06-01",
                        "2019-10-01",
                        "2450.00",
                        "0",
                        "2",
                        "490",
                        "1",
                        "1",
                        "Active",
                        "2018-06-01",
                        "NULL",
                        "NULL"});
#line 11
 testRunner.And("I have the following commitments", ((string)(null)), table2, "And ");
#line 16
 testRunner.When("I call the service ValidataDatalockForProvider", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 18
 testRunner.Then("I get 0 validation errors in the DataLockValidationResult", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Learner Completes and progresses - commitment is not stopped - no datalocks")]
        public virtual void LearnerCompletesAndProgresses_CommitmentIsNotStopped_NoDatalocks()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Learner Completes and progresses - commitment is not stopped - no datalocks", ((string[])(null)));
#line 21
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "PriceEpisodeIdentifier",
                        "EpisodeStartDate",
                        "TNPStartDate",
                        "AgreedPrice",
                        "Period",
                        "Prog",
                        "Pathway",
                        "Standard",
                        "Framework",
                        "TT01",
                        "TT02",
                        "TT03",
                        "TT06",
                        "TT07",
                        "TT08",
                        "TT09",
                        "TT10",
                        "End Date",
                        "2nd Incentive Date"});
            table3.AddRow(new string[] {
                        "3-490-1-01/08/2017",
                        "2017-08-01",
                        "2017-06-13",
                        "1950.00",
                        "11",
                        "3",
                        "1",
                        "0",
                        "490",
                        "0",
                        "390",
                        "222.85",
                        "500",
                        "500",
                        "0",
                        "10",
                        "20",
                        "06/06/2018",
                        "03/06/2018"});
            table3.AddRow(new string[] {
                        "2-490-1-18/06/2018",
                        "2018-06-18",
                        "2018-06-18",
                        "2450.00",
                        "11",
                        "2",
                        "1",
                        "0",
                        "490",
                        "115.29",
                        "0",
                        "0",
                        "0",
                        "0",
                        "23.52",
                        "0",
                        "0",
                        "",
                        ""});
#line 22
 testRunner.Given("I have the following on programme earnings", ((string)(null)), table3, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "CommitmentId",
                        "VersionId",
                        "StartDate",
                        "EndDate",
                        "AgreedCost",
                        "Standard",
                        "Prog",
                        "Framework",
                        "Pathway",
                        "PaymentStatus",
                        "PaymentStatusDescription"});
            table4.AddRow(new string[] {
                        "12526",
                        "2957434-001",
                        "2017-06-01",
                        "2018-06-01",
                        "1950.00",
                        "0",
                        "3",
                        "490",
                        "1",
                        "1",
                        "Active"});
            table4.AddRow(new string[] {
                        "277697",
                        "2600007-001",
                        "2018-06-01",
                        "2019-10-01",
                        "2450.00",
                        "0",
                        "2",
                        "490",
                        "1",
                        "1",
                        "Active"});
#line 27
 testRunner.And("I have the following commitments", ((string)(null)), table4, "And ");
#line 32
 testRunner.When("I call the service ValidataDatalockForProvider", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 34
 testRunner.Then("I get 0 validation errors in the DataLockValidationResult", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
